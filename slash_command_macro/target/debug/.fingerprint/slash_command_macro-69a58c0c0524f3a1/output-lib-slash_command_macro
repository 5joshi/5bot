{"message":"unresolved import `syn::Meta`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\command.rs","byte_start":210,"byte_end":214,"line_start":6,"line_end":6,"column_start":63,"column_end":67,"is_primary":true,"text":[{"text":"use syn::{parse_quote, Error as SynError, Ident, Lit, LitStr, Meta, Result as SynResult};","highlight_start":63,"highlight_end":67}],"label":"no `Meta` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved import `syn::Meta`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:6:63\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse syn::{parse_quote, Error as SynError, Ident, Lit, LitStr, Meta, Result as SynResult};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Meta` in the root\u001b[0m\n\n"}
{"message":"unresolved imports `syn::parse_macro_input`, `syn::Attribute`, `syn::Visibility`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":192,"byte_end":209,"line_start":11,"line_end":11,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    parse_macro_input, Attribute, Error as SynError, Ident, Result as SynResult, Token, Visibility,","highlight_start":5,"highlight_end":22}],"label":"no `parse_macro_input` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":211,"byte_end":220,"line_start":11,"line_end":11,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"    parse_macro_input, Attribute, Error as SynError, Ident, Result as SynResult, Token, Visibility,","highlight_start":24,"highlight_end":33}],"label":"no `Attribute` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":276,"byte_end":286,"line_start":11,"line_end":11,"column_start":89,"column_end":99,"is_primary":true,"text":[{"text":"    parse_macro_input, Attribute, Error as SynError, Ident, Result as SynResult, Token, Visibility,","highlight_start":89,"highlight_end":99}],"label":"no `Visibility` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unresolved imports `syn::parse_macro_input`, `syn::Attribute`, `syn::Visibility`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    parse_macro_input, Attribute, Error as SynError, Ident, Result as SynResult, Token, Visibility,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Attribute` in the root\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `Visibility` in the root\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `parse_macro_input` in the root\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `quote` in `__private`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2570,"byte_end":2575,"line_start":78,"line_end":78,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":36,"highlight_end":41}],"label":"could not find `quote` in `__private`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":1470,"byte_end":1488,"line_start":42,"line_end":42,"column_start":34,"column_end":52,"is_primary":false,"text":[{"text":"                    if m.path == parse_quote!(name) {","highlight_start":34,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parse_quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2407,"byte_end":2625,"line_start":74,"line_end":82,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! parse_quote {","highlight_start":1,"highlight_end":1},{"text":"    ($($tt:tt)*) => {","highlight_start":1,"highlight_end":1},{"text":"        $crate::parse_quote::parse(","highlight_start":1,"highlight_end":1},{"text":"            $crate::__private::From::from(","highlight_start":1,"highlight_end":1},{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":1,"highlight_end":1},{"text":"            )","highlight_start":1,"highlight_end":1},{"text":"        )","highlight_start":1,"highlight_end":1},{"text":"    };","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `quote` in `__private`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:42:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    if m.path == parse_quote!(name) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `quote` in `__private`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `parse_quote` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `quote` in `__private`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2570,"byte_end":2575,"line_start":78,"line_end":78,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":36,"highlight_end":41}],"label":"could not find `quote` in `__private`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":1581,"byte_end":1598,"line_start":44,"line_end":44,"column_start":41,"column_end":58,"is_primary":false,"text":[{"text":"                    } else if m.path == parse_quote!(run) {","highlight_start":41,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parse_quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2407,"byte_end":2625,"line_start":74,"line_end":82,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! parse_quote {","highlight_start":1,"highlight_end":27},{"text":"    ($($tt:tt)*) => {","highlight_start":1,"highlight_end":22},{"text":"        $crate::parse_quote::parse(","highlight_start":1,"highlight_end":36},{"text":"            $crate::__private::From::from(","highlight_start":1,"highlight_end":43},{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":1,"highlight_end":58},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `quote` in `__private`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:44:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    } else if m.path == parse_quote!(run) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `quote` in `__private`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `parse_quote` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `quote` in `__private`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2570,"byte_end":2575,"line_start":78,"line_end":78,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":36,"highlight_end":41}],"label":"could not find `quote` in `__private`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":1691,"byte_end":1709,"line_start":46,"line_end":46,"column_start":41,"column_end":59,"is_primary":false,"text":[{"text":"                    } else if m.path == parse_quote!(args) {","highlight_start":41,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parse_quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2407,"byte_end":2625,"line_start":74,"line_end":82,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! parse_quote {","highlight_start":1,"highlight_end":27},{"text":"    ($($tt:tt)*) => {","highlight_start":1,"highlight_end":22},{"text":"        $crate::parse_quote::parse(","highlight_start":1,"highlight_end":36},{"text":"            $crate::__private::From::from(","highlight_start":1,"highlight_end":43},{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":1,"highlight_end":58},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `quote` in `__private`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:46:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    } else if m.path == parse_quote!(args) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `quote` in `__private`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `parse_quote` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `quote` in `__private`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2570,"byte_end":2575,"line_start":78,"line_end":78,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":36,"highlight_end":41}],"label":"could not find `quote` in `__private`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":2222,"byte_end":2247,"line_start":56,"line_end":56,"column_start":41,"column_end":66,"is_primary":false,"text":[{"text":"                    } else if m.path == parse_quote!(description) {","highlight_start":41,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parse_quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2407,"byte_end":2625,"line_start":74,"line_end":82,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! parse_quote {","highlight_start":1,"highlight_end":27},{"text":"    ($($tt:tt)*) => {","highlight_start":1,"highlight_end":22},{"text":"        $crate::parse_quote::parse(","highlight_start":1,"highlight_end":36},{"text":"            $crate::__private::From::from(","highlight_start":1,"highlight_end":43},{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":1,"highlight_end":58},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `quote` in `__private`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:56:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    } else if m.path == parse_quote!(description) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `quote` in `__private`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `parse_quote` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"failed to resolve: could not find `quote` in `__private`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2570,"byte_end":2575,"line_start":78,"line_end":78,"column_start":36,"column_end":41,"is_primary":true,"text":[{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":36,"highlight_end":41}],"label":"could not find `quote` in `__private`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":2347,"byte_end":2368,"line_start":58,"line_end":58,"column_start":41,"column_end":62,"is_primary":false,"text":[{"text":"                    } else if m.path == parse_quote!(options) {","highlight_start":41,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"parse_quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-1.0.76\\src\\parse_quote.rs","byte_start":2407,"byte_end":2625,"line_start":74,"line_end":82,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! parse_quote {","highlight_start":1,"highlight_end":27},{"text":"    ($($tt:tt)*) => {","highlight_start":1,"highlight_end":22},{"text":"        $crate::parse_quote::parse(","highlight_start":1,"highlight_end":36},{"text":"            $crate::__private::From::from(","highlight_start":1,"highlight_end":43},{"text":"                $crate::__private::quote::quote!($($tt)*)","highlight_start":1,"highlight_end":58},{"text":"            )","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: could not find `quote` in `__private`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:58:41\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    } else if m.path == parse_quote!(options) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `quote` in `__private`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `parse_quote` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"cannot determine resolution for the macro `parse_macro_input`","code":null,"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":2632,"byte_end":2649,"line_start":77,"line_end":77,"column_start":20,"column_end":37,"is_primary":true,"text":[{"text":"        let base = parse_macro_input!(input as Base);","highlight_start":20,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"import resolution is stuck, try simplifying macro imports","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot determine resolution for the macro `parse_macro_input`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:77:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let base = parse_macro_input!(input as Base);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: import resolution is stuck, try simplifying macro imports\u001b[0m\n\n"}
{"message":"the trait bound `proc_macro::TokenStream: From<TokenStream2>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":2738,"byte_end":2755,"line_start":80,"line_end":80,"column_start":28,"column_end":45,"is_primary":true,"text":[{"text":"            Ok(command) => TokenStream::from(quote! { #command }),","highlight_start":28,"highlight_end":45}],"label":"the trait `From<TokenStream2>` is not implemented for `proc_macro::TokenStream`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following implementations were found:\n  <proc_macro::TokenStream as From<proc_macro::TokenTree>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by `from`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\convert\\mod.rs","byte_start":13577,"byte_end":13599,"line_start":371,"line_end":371,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    fn from(_: T) -> Self;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `proc_macro::TokenStream: From<TokenStream2>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:80:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            Ok(command) => TokenStream::from(quote! { #command }),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<TokenStream2>` is not implemented for `proc_macro::TokenStream`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m              <proc_macro::TokenStream as From<proc_macro::TokenTree>>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `from`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\convert\\mod.rs:371:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn from(_: T) -> Self;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the trait bound `proc_macro::TokenStream: From<TokenStream2>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src\\lib.rs","byte_start":3029,"byte_end":3046,"line_start":87,"line_end":87,"column_start":9,"column_end":26,"is_primary":true,"text":[{"text":"        TokenStream::from(err.to_compile_error())","highlight_start":9,"highlight_end":26}],"label":"the trait `From<TokenStream2>` is not implemented for `proc_macro::TokenStream`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following implementations were found:\n  <proc_macro::TokenStream as From<proc_macro::TokenTree>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by `from`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\convert\\mod.rs","byte_start":13577,"byte_end":13599,"line_start":371,"line_end":371,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"    fn from(_: T) -> Self;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `proc_macro::TokenStream: From<TokenStream2>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:87:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m87\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        TokenStream::from(err.to_compile_error())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<TokenStream2>` is not implemented for `proc_macro::TokenStream`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m              <proc_macro::TokenStream as From<proc_macro::TokenTree>>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `from`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\convert\\mod.rs:371:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m371\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn from(_: T) -> Self;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":4748,"byte_end":5391,"line_start":130,"line_end":148,"column_start":27,"column_end":10,"is_primary":false,"text":[{"text":"        let base_stream = quote! {","highlight_start":27,"highlight_end":35},{"text":"            pub struct #name;","highlight_start":1,"highlight_end":30},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub struct #fut_name<'f> {","highlight_start":1,"highlight_end":39},{"text":"                fut: ::futures::future::BoxFuture<'f, crate::BotResult<()>>,","highlight_start":1,"highlight_end":77},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            impl<'f> ::std::future::Future for #fut_name<'f> {","highlight_start":1,"highlight_end":63},{"text":"                type Output = crate::BotResult<()>;","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                fn poll(mut self: ::std::pin::Pin<&mut Self>, cx: &mut ::std::task::Context<'_>) -> ::std::task::Poll<Self::Output> {","highlight_start":1,"highlight_end":134},{"text":"                    ::std::pin::Pin::new(&mut self.fut).poll(cx)","highlight_start":1,"highlight_end":65},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            impl #name {","highlight_start":1,"highlight_end":25},{"text":"                pub const NAME: &'static str = #cmd_name;","highlight_start":1,"highlight_end":58},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        };","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:130:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m        let base_stream = quote! {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m___________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pub struct #name;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m133\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pub struct #fut_name<'f> {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m148\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":5519,"byte_end":6278,"line_start":153,"line_end":168,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            quote! {","highlight_start":13,"highlight_end":21},{"text":"                impl #name {","highlight_start":1,"highlight_end":29},{"text":"                    pub fn define() -> ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":89},{"text":"                        ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":74},{"text":"                            application_id: None,","highlight_start":1,"highlight_end":50},{"text":"                            guild_id: None,","highlight_start":1,"highlight_end":44},{"text":"                            name: #cmd_name.to_owned(),","highlight_start":1,"highlight_end":56},{"text":"                            default_permission: None,","highlight_start":1,"highlight_end":54},{"text":"                            description: #cmd_description.to_owned(),","highlight_start":1,"highlight_end":70},{"text":"                            id: None,","highlight_start":1,"highlight_end":38},{"text":"                            kind: ::twilight_model::application::command::CommandType::ChatInput,","highlight_start":1,"highlight_end":98},{"text":"                            options: #options_name(),","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:153:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            quote! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                impl #name {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    pub fn define() -> ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":5519,"byte_end":6278,"line_start":153,"line_end":168,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            quote! {","highlight_start":13,"highlight_end":21},{"text":"                impl #name {","highlight_start":1,"highlight_end":29},{"text":"                    pub fn define() -> ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":89},{"text":"                        ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":74},{"text":"                            application_id: None,","highlight_start":1,"highlight_end":50},{"text":"                            guild_id: None,","highlight_start":1,"highlight_end":44},{"text":"                            name: #cmd_name.to_owned(),","highlight_start":1,"highlight_end":56},{"text":"                            default_permission: None,","highlight_start":1,"highlight_end":54},{"text":"                            description: #cmd_description.to_owned(),","highlight_start":1,"highlight_end":70},{"text":"                            id: None,","highlight_start":1,"highlight_end":38},{"text":"                            kind: ::twilight_model::application::command::CommandType::ChatInput,","highlight_start":1,"highlight_end":98},{"text":"                            options: #options_name(),","highlight_start":1,"highlight_end":54},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:153:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            quote! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                impl #name {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    pub fn define() -> ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m156\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m167\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m168\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":6310,"byte_end":7064,"line_start":170,"line_end":185,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            quote! {","highlight_start":13,"highlight_end":21},{"text":"                impl #name {","highlight_start":1,"highlight_end":29},{"text":"                    pub fn define() -> ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":89},{"text":"                        ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":74},{"text":"                            application_id: None,","highlight_start":1,"highlight_end":50},{"text":"                            guild_id: None,","highlight_start":1,"highlight_end":44},{"text":"                            name: #cmd_name.to_owned(),","highlight_start":1,"highlight_end":56},{"text":"                            default_permission: None,","highlight_start":1,"highlight_end":54},{"text":"                            description: #cmd_description.to_owned(),","highlight_start":1,"highlight_end":70},{"text":"                            id: None,","highlight_start":1,"highlight_end":38},{"text":"                            kind: ::twilight_model::application::command::CommandType::ChatInput,","highlight_start":1,"highlight_end":98},{"text":"                            options: Vec::new(),","highlight_start":1,"highlight_end":49},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:170:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            quote! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                impl #name {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    pub fn define() -> ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":6310,"byte_end":7064,"line_start":170,"line_end":185,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            quote! {","highlight_start":13,"highlight_end":21},{"text":"                impl #name {","highlight_start":1,"highlight_end":29},{"text":"                    pub fn define() -> ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":89},{"text":"                        ::twilight_model::application::command::Command {","highlight_start":1,"highlight_end":74},{"text":"                            application_id: None,","highlight_start":1,"highlight_end":50},{"text":"                            guild_id: None,","highlight_start":1,"highlight_end":44},{"text":"                            name: #cmd_name.to_owned(),","highlight_start":1,"highlight_end":56},{"text":"                            default_permission: None,","highlight_start":1,"highlight_end":54},{"text":"                            description: #cmd_description.to_owned(),","highlight_start":1,"highlight_end":70},{"text":"                            id: None,","highlight_start":1,"highlight_end":38},{"text":"                            kind: ::twilight_model::application::command::CommandType::ChatInput,","highlight_start":1,"highlight_end":98},{"text":"                            options: Vec::new(),","highlight_start":1,"highlight_end":49},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:170:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m170\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            quote! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m171\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                impl #name {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    pub fn define() -> ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        ::twilight_model::application::command::Command {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m184\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28179,"byte_end":28205,"line_start":849,"line_end":849,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":7196,"byte_end":8051,"line_start":191,"line_end":209,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            quote! {","highlight_start":13,"highlight_end":21},{"text":"                impl #name {","highlight_start":1,"highlight_end":29},{"text":"                    pub fn run(ctx: ::std::sync::Arc<crate::Context>, mut command: ::twilight_model::application::interaction::ApplicationCommand) -> #fut_name<'static> {","highlight_start":1,"highlight_end":171},{"text":"                        use futures::TryFutureExt;","highlight_start":1,"highlight_end":51},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                        let data = ::std::mem::take(&mut command.data);","highlight_start":1,"highlight_end":72},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                        let fut = #args_name::parse_options(Arc::clone(&ctx), data)","highlight_start":1,"highlight_end":84},{"text":"                            .and_then(|args| #run_name(ctx, command, args))","highlight_start":1,"highlight_end":76},{"text":"                            .map_err(Box::new)","highlight_start":1,"highlight_end":47},{"text":"                            .map_err(|src| crate::Error::Command {","highlight_start":1,"highlight_end":67},{"text":"                                name: #cmd_name,","highlight_start":1,"highlight_end":49},{"text":"                                src,","highlight_start":1,"highlight_end":37},{"text":"                            });","highlight_start":1,"highlight_end":32},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                        #fut_name { fut: Box::pin(fut) }","highlight_start":1,"highlight_end":57},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:191:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   quote! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m       impl #name {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m193\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m           pub fn run(ctx: ::std::sync::Arc<crate::Context>, mut command: ::twilight_model::application::interaction::ApplicationComma\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m194\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m               use futures::TryFutureExt;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m       }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"the trait bound `Lit: ToTokens` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":24825,"byte_end":24830,"line_start":778,"line_end":778,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":37,"highlight_end":42}],"label":"the trait `ToTokens` is not implemented for `Lit`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28179,"byte_end":28205,"line_start":849,"line_end":849,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":28613,"byte_end":28639,"line_start":865,"line_end":865,"column_start":13,"column_end":39,"is_primary":false,"text":[{"text":"            $crate::quote!($($inner)*),","highlight_start":13,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":25017,"byte_end":25053,"line_start":782,"line_end":782,"column_start":9,"column_end":45,"is_primary":false,"text":[{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":9,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21938,"byte_end":22011,"line_start":711,"line_end":711,"column_start":13,"column_end":86,"is_primary":false,"text":[{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":13,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20932,"byte_end":21232,"line_start":674,"line_end":682,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":9,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15429,"byte_end":15467,"line_start":484,"line_end":484,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src\\command.rs","byte_start":8083,"byte_end":8756,"line_start":211,"line_end":226,"column_start":13,"column_end":14,"is_primary":false,"text":[{"text":"            quote! {","highlight_start":13,"highlight_end":21},{"text":"                impl #name {","highlight_start":1,"highlight_end":29},{"text":"                    pub fn run(ctx: ::std::sync::Arc<crate::Context>, command: ::twilight_model::application::interaction::ApplicationCommand) -> #fut_name<'static> {","highlight_start":1,"highlight_end":167},{"text":"                        use futures::TryFutureExt;","highlight_start":1,"highlight_end":51},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                        let fut = #run_name(ctx, command)","highlight_start":1,"highlight_end":58},{"text":"                            .map_err(Box::new)","highlight_start":1,"highlight_end":47},{"text":"                            .map_err(|src| crate::Error::Command {","highlight_start":1,"highlight_end":67},{"text":"                                name: #cmd_name,","highlight_start":1,"highlight_end":49},{"text":"                                src,","highlight_start":1,"highlight_end":37},{"text":"                            });","highlight_start":1,"highlight_end":32},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                        #fut_name { fut: Box::pin(fut) }","highlight_start":1,"highlight_end":57},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":27977,"byte_end":32774,"line_start":844,"line_end":1052,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token {","highlight_start":1,"highlight_end":27},{"text":"    ($tokens:ident ( $($inner:tt)* )) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Parenthesis,","highlight_start":1,"highlight_end":55},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident [ $($inner:tt)* ]) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Bracket,","highlight_start":1,"highlight_end":51},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident { $($inner:tt)* }) => {","highlight_start":1,"highlight_end":43},{"text":"        $crate::__private::push_group(","highlight_start":1,"highlight_end":39},{"text":"            &mut $tokens,","highlight_start":1,"highlight_end":26},{"text":"            $crate::__private::Delimiter::Brace,","highlight_start":1,"highlight_end":49},{"text":"            $crate::quote!($($inner)*),","highlight_start":1,"highlight_end":40},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_add(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident +=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_add_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_and(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &&) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_and(&mut $tokens);","highlight_start":1,"highlight_end":55},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident &=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_and_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident @) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_at(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_bang(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_caret(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ^=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_caret_eq(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident :) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_colon(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ::) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_colon2(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ,) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_comma(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_div(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident /=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_div_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident .) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_dot(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_dot2(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ...) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot3(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ..=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_dot_dot_eq(&mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_eq(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ==) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_eq_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ge(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_gt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_le(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_lt(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_mul_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident !=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_ne(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_or(&mut $tokens);","highlight_start":1,"highlight_end":50},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident |=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_eq(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ||) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_or_or(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident #) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_pound(&mut $tokens);","highlight_start":1,"highlight_end":53},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ?) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_question(&mut $tokens);","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ->) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rarrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <-) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_larrow(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_rem(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident %=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_rem_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident =>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_fat_arrow(&mut $tokens);","highlight_start":1,"highlight_end":57},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident ;) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_semi(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shl(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident <<=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shl_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_shr(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident >>=) => {","highlight_start":1,"highlight_end":29},{"text":"        $crate::__private::push_shr_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident *) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_star(&mut $tokens);","highlight_start":1,"highlight_end":52},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -) => {","highlight_start":1,"highlight_end":27},{"text":"        $crate::__private::push_sub(&mut $tokens);","highlight_start":1,"highlight_end":51},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident -=) => {","highlight_start":1,"highlight_end":28},{"text":"        $crate::__private::push_sub_eq(&mut $tokens);","highlight_start":1,"highlight_end":54},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $ident:ident) => {","highlight_start":1,"highlight_end":38},{"text":"        $crate::__private::push_ident(&mut $tokens, stringify!($ident));","highlight_start":1,"highlight_end":73},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $other:tt) => {","highlight_start":1,"highlight_end":35},{"text":"        $crate::__private::parse(&mut $tokens, stringify!($other));","highlight_start":1,"highlight_end":68},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":15252,"byte_end":15488,"line_start":478,"line_end":487,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote {","highlight_start":1,"highlight_end":21},{"text":"    () => {","highlight_start":1,"highlight_end":12},{"text":"        $crate::__private::TokenStream::new()","highlight_start":1,"highlight_end":46},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($($tt:tt)*) => {{","highlight_start":1,"highlight_end":23},{"text":"        let mut _s = $crate::__private::TokenStream::new();","highlight_start":1,"highlight_end":60},{"text":"        $crate::quote_each_token!(_s $($tt)*);","highlight_start":1,"highlight_end":47},{"text":"        _s","highlight_start":1,"highlight_end":11},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_each_token!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":20855,"byte_end":21241,"line_start":672,"line_end":684,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_each_token {","highlight_start":1,"highlight_end":32},{"text":"    ($tokens:ident $($tts:tt)*) => {","highlight_start":1,"highlight_end":37},{"text":"        $crate::quote_tokens_with_context!($tokens","highlight_start":1,"highlight_end":51},{"text":"            (@ @ @ @ @ @ $($tts)*)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ @ $($tts)* @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ @ $($tts)* @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ @ @ $(($tts))* @ @ @)","highlight_start":1,"highlight_end":37},{"text":"            (@ @ $($tts)* @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            (@ $($tts)* @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"            ($($tts)* @ @ @ @ @ @)","highlight_start":1,"highlight_end":35},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_tokens_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":21727,"byte_end":22031,"line_start":704,"line_end":714,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_tokens_with_context {","highlight_start":1,"highlight_end":41},{"text":"    ($tokens:ident","highlight_start":1,"highlight_end":19},{"text":"        ($($b3:tt)*) ($($b2:tt)*) ($($b1:tt)*)","highlight_start":1,"highlight_end":47},{"text":"        ($($curr:tt)*)","highlight_start":1,"highlight_end":23},{"text":"        ($($a1:tt)*) ($($a2:tt)*) ($($a3:tt)*)","highlight_start":1,"highlight_end":47},{"text":"    ) => {","highlight_start":1,"highlight_end":11},{"text":"        $(","highlight_start":1,"highlight_end":11},{"text":"            $crate::quote_token_with_context!($tokens $b3 $b2 $b1 $curr $a1 $a2 $a3);","highlight_start":1,"highlight_end":86},{"text":"        )*","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::quote_token_with_context!","def_site_span":{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\lib.rs","byte_start":22435,"byte_end":25062,"line_start":732,"line_end":784,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! quote_token_with_context {","highlight_start":1,"highlight_end":40},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt @ $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":71},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) * $a3:tt) => {{","highlight_start":1,"highlight_end":78},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        // This is `while true` instead of `loop` because if there are no","highlight_start":1,"highlight_end":74},{"text":"        // iterators used inside of this repetition then the body would not","highlight_start":1,"highlight_end":76},{"text":"        // contain any `break`, so the compiler would emit unreachable code","highlight_start":1,"highlight_end":76},{"text":"        // warnings on anything below the loop. We use has_iter to detect and","highlight_start":1,"highlight_end":78},{"text":"        // fail to compile when there are no iterators, so here we just work","highlight_start":1,"highlight_end":77},{"text":"        // around the unneeded extra warning.","highlight_start":1,"highlight_end":46},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) ( $($inner:tt)* ) $sep:tt *) => {{","highlight_start":1,"highlight_end":79},{"text":"        use $crate::__private::ext::*;","highlight_start":1,"highlight_end":39},{"text":"        let mut _i = 0usize;","highlight_start":1,"highlight_end":29},{"text":"        let has_iter = $crate::__private::ThereIsNoIteratorInRepetition;","highlight_start":1,"highlight_end":73},{"text":"        $crate::pounded_var_names!(quote_bind_into_iter!(has_iter) () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"        let _: $crate::__private::HasIterator = has_iter;","highlight_start":1,"highlight_end":58},{"text":"        while true {","highlight_start":1,"highlight_end":21},{"text":"            $crate::pounded_var_names!(quote_bind_next_or_break!() () $($inner)*);","highlight_start":1,"highlight_end":83},{"text":"            if _i > 0 {","highlight_start":1,"highlight_end":24},{"text":"                $crate::quote_token!($tokens $sep);","highlight_start":1,"highlight_end":52},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"            _i += 1;","highlight_start":1,"highlight_end":21},{"text":"            $crate::quote_each_token!($tokens $($inner)*);","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }};","highlight_start":1,"highlight_end":8},{"text":"    ($tokens:ident $b3:tt $b2:tt # (( $($inner:tt)* )) $sep:tt * $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident $b3:tt # ( $($inner:tt)* ) ($sep:tt) * $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"    ($tokens:ident # ( $($inner:tt)* ) * (*) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":72},{"text":"        // https://github.com/dtolnay/quote/issues/130","highlight_start":1,"highlight_end":55},{"text":"        $crate::quote_token!($tokens *);","highlight_start":1,"highlight_end":41},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident # ( $($inner:tt)* ) $sep:tt (*) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt (#) $var:ident $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":75},{"text":"        $crate::ToTokens::to_tokens(&$var, &mut $tokens);","highlight_start":1,"highlight_end":58},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"    ($tokens:ident $b3:tt $b2:tt # ($var:ident) $a1:tt $a2:tt $a3:tt) => {};","highlight_start":1,"highlight_end":77},{"text":"    ($tokens:ident $b3:tt $b2:tt $b1:tt ($curr:tt) $a1:tt $a2:tt $a3:tt) => {","highlight_start":1,"highlight_end":78},{"text":"        $crate::quote_token!($tokens $curr);","highlight_start":1,"highlight_end":45},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"required because of the requirements on the impl of `ToTokens` for `&Lit`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by `to_tokens`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs","byte_start":1691,"byte_end":1737,"line_start":55,"line_end":55,"column_start":5,"column_end":51,"is_primary":true,"text":[{"text":"    fn to_tokens(&self, tokens: &mut TokenStream);","highlight_start":5,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the trait bound `Lit: ToTokens` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\command.rs:211:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   quote! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m       impl #name {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m213\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m           pub fn run(ctx: ::std::sync::Arc<crate::Context>, command: ::twilight_model::application::interaction::ApplicationCommand) \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m               use futures::TryFutureExt;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m225\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m       }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_______^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `ToTokens` is not implemented for `Lit`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `ToTokens` for `&Lit`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by `to_tokens`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\5joshi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\quote-1.0.9\\src\\to_tokens.rs:55:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn to_tokens(&self, tokens: &mut TokenStream);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::quote_token_with_context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to 17 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 17 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0432, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0277, E0432, E0433.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
